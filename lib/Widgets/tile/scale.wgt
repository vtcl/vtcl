##############################################################################
#
# Copyright (C) 2007 Tristan  http://www.tcltk.cn
#
# Description file for Tile Widget
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

##############################################################################

Class		TScale

Icon		@vTcl::widgets::tile::scale::getIcon
TreeLabel	@vTcl::widgets::tile::scale::getWidgetTreeLabel
InsertCmd	vTcl::widgets::tile::scale::insertCmd
DefaultValues   -activebackground -background -foreground \
                -highlightbackground -highlightcolor -troughcolor
ClassOption     -_tooltip

CreateCmd ttk::scale

## Special proc for setting up icons on the toolbar.
proc vTcl:TScale:ToolBarSetup {} {
    vTcl:toolbar_add tile TScale "vertical scale" icon_scale_v.gif "-orient vertical"
    vTcl:toolbar_add tile TScale "horizontal scale" icon_scale_h.gif \
    	"-orient horizontal"
}

namespace eval vTcl::widgets::tile::scale {

    proc getIcon {{w ""}} {
    	if {[lempty $w]} {
	    return [list icon_scale_h.gif icon_scale_v.gif]
	}
	if {[catch {$w cget -orient} orient]} {
	    return "icon_scale.gif"
	}
    	if {$orient == "horizontal"} {
	    return "icon_scale_h.gif"
	}
    	return "icon_scale_v.gif"
    }

    proc getWidgetTreeLabel {w} {
        if {[catch {$w cget -orient} orient]} {
	    return "Scale"
	}
        set var [$w cget -variable]
        if {$var != ""} {
            set var " VAR: $var"
        }
        if {$orient == "horizontal"} {
	    return "Horz Scale$var"
	}
        return "Vert Scale$var"
    }

    proc insertCmd {target} {
        set last [lindex [split $target .] end]
        set last [vTcl:rename $last]

        $target configure -variable "[winfo toplevel $target]::$last"
    }
}
